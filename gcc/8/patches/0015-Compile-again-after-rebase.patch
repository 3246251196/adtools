From 5e4a0f62263b0cad2efe3fc1aac01f2edfd0a056 Mon Sep 17 00:00:00 2001
From: Sebastian Bauer <mail@sebastianbauer.info>
Date: Sun, 8 Apr 2018 00:32:23 +0200
Subject: [PATCH 15/15] Compile again after rebase.

---
 gcc/c-family/c-attribs.c    |  2 +-
 gcc/config.gcc              |  2 +-
 gcc/config/rs6000/amigaos.c |  4 ++++
 gcc/config/rs6000/amigaos.h | 26 +++++++++++++++-----------
 gcc/config/rs6000/rs6000.c  |  6 +++---
 5 files changed, 24 insertions(+), 16 deletions(-)

diff --git a/gcc/c-family/c-attribs.c b/gcc/c-family/c-attribs.c
index 0722da8d3b2e461932574e8a27adec86b959e1d9..ffba48ecddf12fbf073c34a7169fd0896cd4d6e0 100644
--- a/gcc/c-family/c-attribs.c
+++ b/gcc/c-family/c-attribs.c
@@ -385,13 +385,13 @@ const struct attribute_spec c_common_attribute_table[] =
   { "warn_unused_result",     0, 0, false, true, true, false,
 			      handle_warn_unused_result_attribute,
 	                      attr_warn_unused_result_exclusions },
   { "libcall",                0, 0, false, true, true, false,
                               handle_libcall_attribute, NULL },
   /* Similiar to libcall but doesn't imply linearvarargs. Can be handled as libcall here. */
-  { "libcall2",               0, 0, false, true, true, false
+  { "libcall2",               0, 0, false, true, true, false,
                               handle_libcall_attribute, NULL },
   { "sentinel",               0, 1, false, true, true, false,
 			      handle_sentinel_attribute, NULL },
   /* For internal use (marking of builtins) only.  The name contains space
      to prevent its usage in source code.  */
   { "type generic",           0, 0, false, true, true, false,
diff --git a/gcc/config.gcc b/gcc/config.gcc
index 27eb8631c194ea848e42adb8c6e3fe7c45b9b94b..9d3b8af274e0fd47923a800cddd54594f83d4887 100644
--- a/gcc/config.gcc
+++ b/gcc/config.gcc
@@ -2367,13 +2367,13 @@ pdp11-*-*)
 	;;
 powerpc-*-amigaos*)
 	tm_file="${tm_file} dbxelf.h elfos.h amigaos-stdint.h rs6000/sysv4.h rs6000/amigaos.h"
 	tm_p_file="${tm_p_file} rs6000/amigaos-protos.h"
 	extra_options="${extra_options} rs6000/sysv4.opt rs6000/amigaos.opt"
 	tmake_file="rs6000/t-amigaos"
-	extra_objs=amigaos.o
+	extra_objs="$extra_objs amigaos.o"
 	use_collect2=no
 	;;
 # port not yet contributed
 #powerpc-*-openbsd*)
 #	tmake_file="${tmake_file} rs6000/t-fprules"
 #	extra_headers=
diff --git a/gcc/config/rs6000/amigaos.c b/gcc/config/rs6000/amigaos.c
index 797261177e46a34ac0aba97f2b9c2b8af8df2e72..179b546108634550fec0beee071d48c0d0680b5f 100644
--- a/gcc/config/rs6000/amigaos.c
+++ b/gcc/config/rs6000/amigaos.c
@@ -24,12 +24,14 @@
 #include "system.h"
 #include "coretypes.h"
 #include "diagnostic-core.h"
 #include "tm.h"
 #include "hash-set.h"
 #include "inchash.h"
+#include "memmodel.h"
+#include "profile-count.h"
 #include "rtl.h"
 #include "regs.h"
 #include "hard-reg-set.h"
 #include "real.h"
 #include "insn-config.h"
 #include "conditions.h"
@@ -47,12 +49,14 @@
 #include "output.h"
 #include "tm_p.h"
 #include "fold-const.h"
 #include "langhooks.h"
 #include "explow.h"
 #include "emit-rtl.h"
+#include "stringpool.h"
+#include "attribs.h"
 
 #undef DEBUG
 #ifdef DEBUG
 #define dprintf(...)      			\
 printf("%s: ", __PRETTY_FUNCTION__);		\
 printf(__VA_ARGS__)
diff --git a/gcc/config/rs6000/amigaos.h b/gcc/config/rs6000/amigaos.h
index 0d06f2dd48c7d97bbd192b26d530b18bc3029665..1153ece337930f7bbf5f9978bf6f3faf2138bda6 100644
--- a/gcc/config/rs6000/amigaos.h
+++ b/gcc/config/rs6000/amigaos.h
@@ -390,18 +390,20 @@ do                                   \
 
 #undef SUBTARGET_INIT_BUILTINS
 #define SUBTARGET_INIT_BUILTINS \
   amigaos_init_builtins ()
 
 /* AmigaOS specific attribute */
+/* { name, min_len, max_len, decl_req, type_req, fn_type_req,
+       affects_type_identity, handler, exclude } */
 #define SUBTARGET_ATTRIBUTE_TABLE \
-  { "linearvarargs", 0, 0, false, true,  true, amigaos_handle_linearvarargs_attribute, false}, \
-  { "lineartags", 0, 0, false, true, true, amigaos_handle_lineartags_attribute, false}, \
-  { "baserel_restore", 0, 0, false, true, true, amigaos_handle_baserel_restore_attribute, false }, \
-  { "force_no_baserel", 0, 0, true, false, false, amigaos_handle_force_no_baserel_attribute, false }, \
-  { "check68kfuncptr", 0, 0, false, true, true, amigaos_handle_check68kfuncptr_attribute, false }
+  { "linearvarargs", 0, 0, false, true,  true, false, amigaos_handle_linearvarargs_attribute, NULL}, \
+  { "lineartags", 0, 0, false, true, true, false, amigaos_handle_lineartags_attribute, NULL}, \
+  { "baserel_restore", 0, 0, false, true, true, false, amigaos_handle_baserel_restore_attribute, NULL }, \
+  { "force_no_baserel", 0, 0, true, false, false, false, amigaos_handle_force_no_baserel_attribute, NULL }, \
+  { "check68kfuncptr", 0, 0, false, true, true, false, amigaos_handle_check68kfuncptr_attribute, NULL }
 
 /* Overrides */
 /*
 #undef INIT_CUMULATIVE_ARGS
 #define INIT_CUMULATIVE_ARGS(CUM, FNTYPE, LIBNAME, INDIRECT, N_NAMED_ARGS) \
   amigaos_init_cumulative_args (&CUM, FNTYPE, LIBNAME, FALSE, N_NAMED_ARGS)
@@ -419,15 +421,17 @@ do                                   \
   amigaos_function_arg (&CUM, MODE, TYPE, NAMED)
 */
 #undef EXPAND_BUILTIN_VA_START
 #define EXPAND_BUILTIN_VA_START(VALIST, NEXTARG) \
   amigaos_expand_builtin_va_start (VALIST, NEXTARG)
 
-#undef SLOW_UNALIGNED_ACCESS
-#define SLOW_UNALIGNED_ACCESS(MODE, ALIGN)				\
-  (STRICT_ALIGNMENT							\
-   || (((MODE) == SFmode) && (ALIGN) < 32)				\
-   || (((MODE) == DFmode || (MODE) == TFmode || (MODE) == DImode)	\
-       && (ALIGN) < 64))
+/*
+//#undef SLOW_UNALIGNED_ACCESS
+//#define SLOW_UNALIGNED_ACCESS(MODE, ALIGN)				\
+//  (STRICT_ALIGNMENT							\
+//   || (((MODE) == SFmode) && (ALIGN) < 32)				\
+//   || (((MODE) == DFmode || (MODE) == TFmode || (MODE) == DImode)	\
+//       && (ALIGN) < 64))
+*/
 
 /* This target uses the amigaos.opt file.  */
 #define TARGET_USES_AMIGAOS_OPT 1
diff --git a/gcc/config/rs6000/rs6000.c b/gcc/config/rs6000/rs6000.c
index 4df0e6b42a7372b9347697b7bd65d70c37179441..e7906a8f17c8a30b4bd536664979ae82ffc0501b 100644
--- a/gcc/config/rs6000/rs6000.c
+++ b/gcc/config/rs6000/rs6000.c
@@ -24855,16 +24855,16 @@ rs6000_stack_info (void)
 #ifdef TARGET_BASEREL
   /* Check if the function wants to setup the baserel register (r2) */
   if (TARGET_BASEREL
       && current_function_decl
       && lookup_attribute ("baserel_restore", TYPE_ATTRIBUTES (TREE_TYPE (current_function_decl))))
     {
-      info_ptr->baserel_save_p = 1;
-      info_ptr->baserel_size = reg_size;
+      info->baserel_save_p = 1;
+      info->baserel_size = reg_size;
       df_set_regs_ever_live(2,true);
-      info_ptr->calls_p = 1;
+      info->calls_p = 1;
     }
 #endif /* TARGET_BASEREL */
 
   /* Determine if we need to save the condition code registers.  */
   if (save_reg_p (CR2_REGNO)
       || save_reg_p (CR3_REGNO)
-- 
2.11.0

